#ifndef _NGC_INTER_LIST_H_
#define _NGC_INTER_LIST_H_

#include <deque>
#include <memory>
#include <bitset>
#include "linuxcnc.h"
#include "interp_base.hh"
#include "emc_nml.hh"
#include "emc.hh"
#include "emcglb.h"

// these go on the interp list
struct NGC_INTERP_LIST_NODE
{
    int line_number;  // line number it was on
    // std::vector<char> command;
    std::unique_ptr<NMLmsg> command;
};

// here's the interp list itself
class NGC_INTERP_LIST
{
public:
    void set_line_number(int line);
    int get_line_number();
    int append(std::unique_ptr<NMLmsg>&& command);
    std::unique_ptr<NMLmsg> get();
    void clear();
    void print();
    int len();

private:
    std::deque<NGC_INTERP_LIST_NODE> linked_list;
    int next_line_number = 0;  // line number used to fill temp_node
    int line_number = 0;       // line number of node from get()
                               // NML_INTERP_LIST_NODE node; // pointer returned by get
};

extern NGC_INTERP_LIST interp_list; /* NML Union, for interpreter */


#endif
